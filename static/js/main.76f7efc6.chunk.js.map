{"version":3,"sources":["logo.svg","components/card/card.component.jsx","components/card-list/card-list.components.jsx","components/search-box/search-box.components.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","monsters","map","SearcBox","placeholder","onChange","type","App","state","searchInput","fetch","then","Response","json","users","setState","this","filteredMonsters","filter","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2RAAe,I,wBCGFA,EAAO,SAACC,GAAD,OAClB,sBAAKC,UAAU,iBAAf,UACE,qBACEC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,0BACHC,IAAI,KAEN,6BAAKL,EAAMG,QAAQG,OACnB,4BAAIN,EAAMG,QAAQI,YCNTC,EAAW,SAACR,GACvB,OACE,qBAAKC,UAAU,YAAf,SACGD,EAAMS,SAASC,KAAI,SAACP,GAAD,OAClB,8BACE,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,YCNhBO,G,MAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,SAAhB,OACtB,uBACEZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbC,SAAUA,MCyBCE,E,4MA1BbC,MAAQ,CACNP,SAAU,GACVQ,YAAa,I,uDAEf,WAAqB,IAAD,OAClBC,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKC,SAAS,CAAEd,SAAUa,S,oBAE/C,WAAU,IAAD,SAC2BE,KAAKR,MAA/BP,EADD,EACCA,SAAUQ,EADX,EACWA,YACZQ,EAAmBhB,EAASiB,QAAO,SAACvB,GAAD,OACvCA,EAAQG,KAAKqB,cAAcC,SAASX,EAAYU,kBAElD,OACE,sBAAK1B,UAAU,MAAf,UACE,cAAC,EAAD,CACEW,YAAa,iBACbC,SAAU,SAACgB,GAAD,OAAO,EAAKN,SAAS,CAAEN,YAAaY,EAAEC,OAAOC,WAEzD,cAAC,EAAD,CAAUtB,SAAUgB,W,GArBVO,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.76f7efc6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from \"react\";\nimport \"./card.styles.css\";\n\nexport const Card = (props) => (\n  <div className=\"card-container\">\n    <img\n      src={`https://robohash.org/${props.monster.id}?set=set2$size=180x180`}\n      alt=\"\"\n    />\n    <h1>{props.monster.name}</h1>\n    <p>{props.monster.email}</p>\n  </div>\n);\n","import React, { Component } from \"react\";\nimport \"./card-list.styles.css\";\nimport { Card } from \"../card/card.component\";\n\nexport const CardList = (props) => {\n  return (\n    <div className=\"card-list\">\n      {props.monsters.map((monster) => (\n        <div>\n          <Card key={monster.id} monster={monster} />\n        </div>\n      ))}\n    </div>\n  );\n};\n","import React, { Component } from \"react\";\nimport \"./search-box.styles.css\";\n\nexport const SearcBox = ({ placeholder, onChange }) => (\n  <input\n    className=\"search\"\n    type=\"search\"\n    placeholder={placeholder}\n    onChange={onChange}\n  />\n);\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { Component } from \"react\";\nimport { CardList } from \"./components/card-list/card-list.components\";\nimport { SearcBox } from \"./components/search-box/search-box.components\";\n\nclass App extends Component {\n  state = {\n    monsters: [],\n    searchInput: \"\",\n  };\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((Response) => Response.json())\n      .then((users) => this.setState({ monsters: users }));\n  }\n  render() {\n    const { monsters, searchInput } = this.state;\n    const filteredMonsters = monsters.filter((monster) =>\n      monster.name.toLowerCase().includes(searchInput.toLowerCase())\n    );\n    return (\n      <div className=\"App\">\n        <SearcBox\n          placeholder={\"Search Monster\"}\n          onChange={(e) => this.setState({ searchInput: e.target.value })}\n        />\n        <CardList monsters={filteredMonsters}></CardList>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}